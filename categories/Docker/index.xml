<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on NewPlayer</title>
    <link>https://chechih.github.io/categories/Docker/</link>
    <description>Recent content in Docker on NewPlayer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>NewPlayer</copyright>
    <lastBuildDate>Sun, 25 May 2025 23:42:54 +0800</lastBuildDate><atom:link href="https://chechih.github.io/categories/Docker/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Docker-compose 安裝</title>
      <link>https://chechih.github.io/posts/20250525/</link>
      <pubDate>Sun, 25 May 2025 23:42:54 +0800</pubDate>
      
      <guid>https://chechih.github.io/posts/20250525/</guid>
      <description>安裝步驟 下載安裝檔 前往 Github 查看對應版本 以下以 v2.27.1 為例執行下載指令: curl -L &amp;#34;https://github.com/docker/compose/releases/download/{docker-compose_version}/docker-compose-$(uname -s)-$(uname -m)&amp;#34; -o /usr/local/bin/docker-compose # curl -L &amp;#34;https://github.com/docker/compose/releases/download/v2.27.1/docker-compose-$(uname -s)-$(uname -m)&amp;#34; -o /usr/local/bin/docker-compose 2 給予執行權限 sudo chmod +x /usr/local/bin/docker-compose 建立符號連結 (讓系統能找到</description>
    </item>
    
    <item>
      <title>從 Harbor Push / Pull Image</title>
      <link>https://chechih.github.io/posts/20250514/</link>
      <pubDate>Wed, 14 May 2025 21:55:16 +0800</pubDate>
      
      <guid>https://chechih.github.io/posts/20250514/</guid>
      <description>Push Image 到 Harbor 設定 Docker 為允許非安全連線 (Insecure Registry) Linux 系統操作，編輯 Docker 設定檔 vim /etc/docker/daemon.json 輸入 { &amp;#34;insecure-registries&amp;#34;:[&amp;#34;&amp;lt;harbor_ip&amp;gt;:&amp;lt;harbor_port&amp;gt;&amp;#34;] } # ex: # { &amp;#34;insecure-registries&amp;#34;:[&amp;#34;XXX.XXX.XXX.XXX:XXX&amp;#34;] } 儲存並離開: ESC → :wq 重新啟動 Docker: sudo systemctl stop docker sudo systemctl start docker Docker Desktop 操作 點選</description>
    </item>
    
    <item>
      <title>為 Ollama 建立一個聊天介面</title>
      <link>https://chechih.github.io/posts/20250416/</link>
      <pubDate>Wed, 16 Apr 2025 01:06:47 +0800</pubDate>
      
      <guid>https://chechih.github.io/posts/20250416/</guid>
      <description>前言 當你安裝好了 Ollama，你可能會想說，可不可以跟 GPT 一樣，給他個介面?當然可以，這裡將會介紹怎麼安裝 Webui 安裝 要先安裝 Docker ，未安裝可到 Docker 安裝 By</description>
    </item>
    
    <item>
      <title>Docker Desktop 安裝</title>
      <link>https://chechih.github.io/posts/20241206/</link>
      <pubDate>Fri, 06 Dec 2024 00:41:07 +0800</pubDate>
      
      <guid>https://chechih.github.io/posts/20241206/</guid>
      <description>安裝環境 Windows 2022 前置作業 到空置台開起 Hyper-V 下載 Docker Desktop 到 Docker 官網 下載安裝 下載完成 安裝 開啟執行檔 勾選設定，第一個選項是指要不要使用 Hyper-V 安裝，若沒有特別需求，使</description>
    </item>
    
    <item>
      <title>使用 Docker 建立 Nginx 網站</title>
      <link>https://chechih.github.io/posts/20241202/</link>
      <pubDate>Mon, 02 Dec 2024 00:33:59 +0800</pubDate>
      
      <guid>https://chechih.github.io/posts/20241202/</guid>
      <description>前言 這裡將簡單講解在 Docker 上，怎麼使用 Nginx 架設靜態網站 下載 Nginx Image docker pull nginx 建立 Nginx Controller 建立一個空資料夾，資料夾名稱可以自訂，本範例建立**/home/new</description>
    </item>
    
    <item>
      <title>建立私有 Docker Registory</title>
      <link>https://chechih.github.io/posts/20241127/</link>
      <pubDate>Wed, 27 Nov 2024 00:50:11 +0800</pubDate>
      
      <guid>https://chechih.github.io/posts/20241127/</guid>
      <description>前言 一般建立好的 Image 都會上傳到 Docker Hub 上，這樣 Pull 時，就取得到檔案，但有個問題，就是檔案可能洩漏出去，且有拉取 Image 的限制。好消息是，有個 Docker Registory 的倉庫，他</description>
    </item>
    
    <item>
      <title>Docker 指令</title>
      <link>https://chechih.github.io/posts/20241107/</link>
      <pubDate>Thu, 07 Nov 2024 01:13:06 +0800</pubDate>
      
      <guid>https://chechih.github.io/posts/20241107/</guid>
      <description>容器 列出目前運作的容器 docker ps 列出目前所有的(包含運作中及停止運作的的)容器 docker ps -a 啟動容器 docker start &amp;lt;container_id&amp;gt; 停止容器 docker stop &amp;lt;container_id&amp;gt; 查看容器的 Log docker logs &amp;lt;container_id&amp;gt; 刪除容器 docker container rm &amp;lt;container_id&amp;gt;</description>
    </item>
    
    <item>
      <title>Docker 簡介</title>
      <link>https://chechih.github.io/posts/Docker/Introduction/</link>
      <pubDate>Sun, 18 Aug 2024 04:28:59 +0800</pubDate>
      
      <guid>https://chechih.github.io/posts/Docker/Introduction/</guid>
      <description>基本概念 在 Docker 中，有三個大重要概念，分別為映像檔（Image）、容器（Container）、倉庫（Repository）。 映像檔（Image）</description>
    </item>
    
    <item>
      <title>Docker 安裝 By Ubuntu</title>
      <link>https://chechih.github.io/posts/Docker/Install/</link>
      <pubDate>Mon, 12 Aug 2024 01:02:01 +0800</pubDate>
      
      <guid>https://chechih.github.io/posts/Docker/Install/</guid>
      <description>安裝 在 Ubuntu 中安裝 Docker 使用 docker.io 會比較快速，能省去許多麻煩。 打開終端機，輸入 sudo apt-get install docker.io -y 2. 檢查 Docker 是否正常啟動 service docker status 3. 將自己加入 docker 群組，這樣之後下指令就不</description>
    </item>
    
  </channel>
</rss>
